//
// Copyright (c) ZeroC, Inc. All rights reserved.
//
//
// Ice version 3.7.7
//
// <auto-generated>
//
// Generated from file `PI.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package Pi;

public class Job extends com.zeroc.Ice.Value
{
    public Job()
    {
        this.id = "";
        this.startDate = "";
        this.finishDate = "";
        this.taskCounter = "";
        this.pointsInside = "";
        this.clientProxy = "";
    }

    public Job(String id, short nPower, long seed, double repNumbers, short epsilonPower, String startDate, String finishDate, String taskCounter, String pointsInside, String clientProxy)
    {
        this.id = id;
        this.nPower = nPower;
        this.seed = seed;
        this.repNumbers = repNumbers;
        this.epsilonPower = epsilonPower;
        this.startDate = startDate;
        this.finishDate = finishDate;
        this.taskCounter = taskCounter;
        this.pointsInside = pointsInside;
        this.clientProxy = clientProxy;
    }

    public String id;

    public short nPower;

    public long seed;

    public double repNumbers;

    public short epsilonPower;

    public String startDate;

    public String finishDate;

    public String taskCounter;

    public String pointsInside;

    public String clientProxy;

    public Job clone()
    {
        return (Job)super.clone();
    }

    public static String ice_staticId()
    {
        return "::Pi::Job";
    }

    @Override
    public String ice_id()
    {
        return ice_staticId();
    }

    /** @hidden */
    public static final long serialVersionUID = 1774656562L;

    /** @hidden */
    @Override
    protected void _iceWriteImpl(com.zeroc.Ice.OutputStream ostr_)
    {
        ostr_.startSlice(ice_staticId(), -1, true);
        ostr_.writeString(id);
        ostr_.writeShort(nPower);
        ostr_.writeLong(seed);
        ostr_.writeDouble(repNumbers);
        ostr_.writeShort(epsilonPower);
        ostr_.writeString(startDate);
        ostr_.writeString(finishDate);
        ostr_.writeString(taskCounter);
        ostr_.writeString(pointsInside);
        ostr_.writeString(clientProxy);
        ostr_.endSlice();
    }

    /** @hidden */
    @Override
    protected void _iceReadImpl(com.zeroc.Ice.InputStream istr_)
    {
        istr_.startSlice();
        id = istr_.readString();
        nPower = istr_.readShort();
        seed = istr_.readLong();
        repNumbers = istr_.readDouble();
        epsilonPower = istr_.readShort();
        startDate = istr_.readString();
        finishDate = istr_.readString();
        taskCounter = istr_.readString();
        pointsInside = istr_.readString();
        clientProxy = istr_.readString();
        istr_.endSlice();
    }
}
